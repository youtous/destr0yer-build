---
# This play a docker swarm network.

- name: Install docker on all systems
  hosts: all
  roles:
    - docker
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-setup"]

- name: Setup docker swarm mode on all systems
  hosts: all
  roles:
    - docker-swarm-tls
    # - docker-ipv6 <= for the moment, ipv6 is not enabled
    - docker-log
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-setup"]

- name: Initiate the primary manager
  hosts: primary_manager
  roles:
    - docker-initiate-swarm
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Initiate managers
  hosts: managers
  roles:
    - docker-initiate-managers
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Initiate workers
  hosts: workers
  roles:
    - docker-initiate-workers
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Cleanup swarm init
  hosts: localhost
  tasks:
    - name: refresh inventory
      meta: refresh_inventory
  tags: ["docker-swarm-init-cleanup"]

- name: Setup docker backup tools
  hosts: all
  roles:
    - docker-backup-mysql
    - docker-backup-volumes
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-backup-tools"]

- name: Setup traefik reverse-proxy with consul
  hosts: primary_manager # we use the primary_manager as an entrypoint, docker-swarm will handle replicas if needed
  roles:
    - docker-traefik-consul # smart reverse proxy for docker swarm
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-traefik"]

- name: Setup traefik additionals on all
  hosts: all
  tasks:
    - include_role:
        name: docker-traefik-consul
        tasks_from: fail2ban
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-traefik"]

- name: Setup swarm_cronjon
  hosts: primary_manager
  roles:
    - docker-swarm-cronjob
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-cronjob"]

- name: Setup docker-swarm monitoring tools
  hosts: primary_manager
  roles:
    - docker-portainer # web manager of the cluster
    - docker-swarmprom # monitoring and metrics tools
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-monitoring"]

- name: Setup docker elastic cluster
  hosts: primary_manager_elastic
  roles:
    - docker-elastic # setup an elastic stack cluster
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-elastic"]

- name: Setup docker-swarm logging tools
  hosts: primary_manager_logging_elastic
  roles:
    - docker-logspout # output docker logs to elastic cluster
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-elastic-collectors"]

- name: Setup elastic for each node logging tools
  hosts: all_logging_elastic
  roles:
    - elastic-journalbeat # output system logs from journalctl to elastic cluster
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["elastic-logging-collectors"]
...