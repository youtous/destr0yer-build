---
# This play a docker swarm network.

- name: Install docker on all systems
  hosts: all
  roles:
    - docker
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-setup", "docker-swarm-setup", "docker-swarm-init"]

- name: Setup docker swarm mode on all systems
  hosts: all # Due to daemon.json format, DO NOT run roles of this task individually
  roles:
    - docker-swarm-tls
    # - docker-ipv6 <= for the moment, ipv6 is not enabled
    - docker-dns # use host dns or specific dns
    - docker-log
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-setup", "docker-swarm-init"]

- name: Initiate the primary manager
  hosts: primary_manager
  roles:
    - docker-initiate-swarm
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Initiate managers
  hosts: managers
  roles:
    - docker-initiate-managers
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Initiate workers
  hosts: workers
  roles:
    - docker-initiate-workers
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-swarm-init"]

- name: Cleanup swarm init
  hosts: localhost
  tasks:
    - name: refresh inventory
      meta: refresh_inventory
  tags: ["docker-swarm-init", "docker-swarm-init-cleanup"]

- name: Integrate fail2ban for docker (recidive)
  hosts: all
  roles:
    - docker-fail2ban
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-fail2ban"]

- name: Setup auto-restore DOCKER-USER chain
  hosts: all
  roles:
    - docker-user-chain
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-user-chain"]

- name: Setup docker backup tools
  hosts: all
  roles:
    - docker-backup-mysql
    - docker-backup-volumes
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-backup-tools"]

- name: Setup docker common tools
  hosts: all
  roles:
    - docker-ctop-cmd
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["docker-common-tools"]

- name: Setup traefik reverse-proxy with consul
  hosts: primary_manager # we use the primary_manager as an entrypoint, docker-swarm will handle replicas if needed
  roles:
    - docker-traefik-consul # smart reverse proxy for docker swarm
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["traefik", "traefik-stack"]

- name: Setup traefik additionals on all
  hosts: all
  tasks:
    - include_role:
        name: docker-traefik-consul
        tasks_from: fail2ban
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["traefik", "traefik-f2b"]

- name: Setup swarm_cronjon
  hosts: primary_manager
  roles:
    - docker-swarm-cronjob
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["cronjob"]

- name: Setup docker-swarm portainer
  hosts: primary_manager
  roles:
    - docker-portainer # web manager of the cluster
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["portainer"]

- name: Setup docker-swarm swarmprom
  hosts: primary_manager_swarmprom
  roles:
    - docker-swarmprom # monitoring and metrics tools
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["swarmprom"]

- name: Include elastic cluster setup
  import_playbook: elastic.yml

- name: Include mailserver deployment for regenerating firewall rules
  import_playbook: mailserver.yml

- name: Include nextcloud deployment (just in case :)) # ufw rules
  import_playbook: nextcloud.yml

- name: Include teamspeak deployment (just in case :)) # potential ufw rules (not yet used)
  import_playbook: teamspeak.yml
...