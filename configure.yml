---
# Provision servers using a global policy

- name: Configure systems | disk partitioning with LVM
  hosts: [base_systems, commander_systems]
  roles:
    - disks_lvm_management
    - swap
    - mount
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["disk-partitioning", "configure-systems", "swap"]

- name: Configure systems | apt packages configuration and update
  hosts: [base_systems, commander_systems]
  serial: 1 # configure one by one each host in case of docker update/kernel reboot
  roles:
    - apt
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["apt", "configure-systems"]

- name: Configure systems | minimal requirements
  hosts: [base_systems, commander_systems]
  roles:
    - system_packages # system packages (htop, curl etc)
    - host # configure system host files
    - system_configuration # configure the system (selinux, timezone...)
    - system_tools # server cli tools (vim, etc)
    - iptables_firewall # define firewall policy
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["system", "configure-systems", "minimal"]

- name: Configure systems | configure kernel
  hosts: [base_systems, commander_systems]
  serial: 1 # configure one by one each host in case of reboot
  roles:
    - sysctl_configuration
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["sysctl", "configure-systems"]

- name: Configure systems | manage users
  hosts: [base_systems, commander_systems]
  roles:
    - users
    - ssh_user_keys
    - restrict_user_ssh_ips
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["users", "configure-systems"]

- name: Configure systems | configure OpenSSH
  hosts: [base_systems, commander_systems]
  roles:
    - ssh
    - motd
    - notify_login # notify when an user connects
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["ssh", "sshd", "configure-systems"]


- name: Configure systems | configure log management
  hosts: [base_systems, commander_systems]
  roles:
    - logrotate
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["log", "logrotate", "configure-systems"]

- name: Configure systems | monit
  hosts: [base_systems, commander_systems]
  roles:
    - monit
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["monit", "configure-systems"]

- name: Configure systems | fail2ban
  hosts: [base_systems, commander_systems]
  roles:
    - fail2ban
    - monit_fail2ban
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["fail2ban", "configure-systems"]

- name: Configure systems | filter ips for base systems (entrypoint required)
  hosts: [base_systems]
  roles:
    - entrypoint_ssh
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["entrypoint_ssh", "ssh", "sshd", "configure-systems"]

- name: Configure systems | resolv dns configuration
  hosts: [base_systems, commander_systems]
  roles:
    - dnscrypt_proxy # DNS with TLS
    - monit_dnscrypt_proxy
    - resolv
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["resolv", "configure-systems", "dnscrypt_proxy"]

- name: Configure systems | hardening
  hosts: [base_systems, commander_systems]
  roles:
    - hardening # hardening systems
    - scaleway_services # define services policy for scaleway
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["hardening", "configure-systems"]

- name: Configure systems | sysstat
  hosts: [base_systems, commander_systems]
  roles:
    - sysstat # resource monitoring
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["sysstat", "configure-systems"]

- name: Configure systems | logwatch
  hosts: [base_systems, commander_systems]
  roles:
    - logwatch # monitor server using emails
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["logwatch", "configure-systems"]

- name: Configure systems with specifics interfaces
  hosts: interfaces
  roles:
    - network
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["interfaces"]

- name: Configure systems | configure fish shell
  hosts: [base_systems, commander_systems]
  roles:
    - oh_my_fish
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["fish", "configure-systems"]

- name: Configure systems | glances
  hosts: [base_systems, commander_systems]
  roles:
    - glances # boosted htop
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["configure-systems", "update-systems"]

- name: Configure Postfix relay servers
  hosts: smtp_relays
  roles:
    - postfix_relay
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["smtp-relay"]

- name: Configure backup storage systems
  hosts: backup_storage
  roles:
    - backup_storage
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["backup_storage"]

- name: Configure backed-up systems
  hosts: backed_up_hosts
  roles:
    - backup_strategy
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["backup_strategy"]

- name: Configure database servers
  hosts: database_servers
  roles:
    - mariadb_server
    - monit_mariadb
    - backup_mariadb
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["database-servers", "database"]

- name: Configure database clients
  hosts: database_clients
  roles:
    - mariadb_client
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["database-clients", "database"]

- name: Configure WireGuard peers
  hosts: wireguard_peers
  roles:
    - wireguard_meta
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["wireguard"]

- name: Watch servers ips
  hosts: watch_ip
  roles:
    - notify_ip_change
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["watch-ip"]

- name: Monitor ssl hosts
  hosts: watch_ssl
  roles:
    - monitor_testssl
  vars_files:
    - secret_vars/all.yml
    - task_vars/sudo.yml
    - "secret_vars/{{ inventory_hostname }}.yml"
  tags: ["watch-ssl"]
...
