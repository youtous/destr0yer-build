version: '3.7'

services:
  consul-leader:
    image: consul
    command: agent -server -client=0.0.0.0 -bootstrap -ui
    volumes:
      - consul-data-leader:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    networks:
      - default
{% if consul_external_network_enabled %}
      - "{{ consul_external_network }}"
{% endif %}
      - "{{ traefik_network }}"
    deploy:
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
        max_attempts: {{ consul_max_attempts }}
      labels:
        - "traefik.frontend.rule=Host:{{ consul_ui_domain }}"
        - traefik.enable=true
        - traefik.port=8500
        - "traefik.tags={{ traefik_public_tag }}"
        - "traefik.docker.network={{ traefik_network }}"
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # security labels
        - "traefik.frontend.headers.customResponseHeaders=Server:||X-Powered-By:||Permissions-Policy:accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" # see best practices https://github.com/w3c/webappsec-permissions-policy/blob/master/features.md, https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy
        - traefik.frontend.headers.referrerPolicy=same-origin # can use same-origin for more privacy (https://web.dev/referrer-best-practices/)
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.frameDeny=true
        - "traefik.frontend.headers.contentSecurityPolicy=default-src 'self'; script-src 'self' 'unsafe-inline'; img-src 'self' data:; style-src 'self' 'unsafe-inline' data:; frame-ancestors 'self'; frame-src 'self'; object-src 'none';" # https://csp-evaluator.withgoogle.com/ content security policy
        - traefik.frontend.headers.contentTypeNosniff=true
        # HSTS
        - traefik.frontend.headers.SSLRedirect=true
        - "traefik.frontend.headers.SSLHost={{ consul_ui_domain }}"
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
        # Auth
        - "traefik.frontend.auth.basic.users={{ backend_users|join(',') | replace('$', '$$') }}"
        - "traefik.frontend.whiteList.sourceRange={{ trusted_backend_ips|join(',') }},127.0.0.1"

  consul-replica:
    image: consul
    command: agent -server -client=0.0.0.0 -retry-join="consul-leader"
    volumes:
      - consul-data-replica:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}'
    networks:
      - default
      - "{{ traefik_network }}"
{% if consul_external_network_enabled %}
      - "{{ consul_external_network }}"
{% endif %}
    deploy:
      replicas: {{ consul_replicas }}
      placement:
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 15s
        window: 120s
        max_attempts: {{ consul_max_attempts }}
  traefik:
    image: "traefik:v{{ traefik_version }}"
    ports:
      # read the client IP in your applications/stacks using the X-Forwarded-For
      #  or X-Real-IP headers provided by Traefik
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    deploy:
      # replicas + 1 which is the leader
      replicas: {{ traefik_replicas + 1}}
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      restart_policy:
        condition: on-failure
        delay: 15s
        window: 30s
        max_attempts: {{ traefik_max_attempts }}
      labels:
        - "traefik.frontend.rule=Host:{{ traefik_ui_domain }}"
        - traefik.enable=true
        - traefik.port=8080
        - "traefik.tags={{ traefik_public_tag }}"
        - "traefik.docker.network={{ traefik_network }}"
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # security labels
        - "traefik.frontend.headers.customResponseHeaders=Server:||X-Powered-By:||Permissions-Policy:accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" # see best practices https://github.com/w3c/webappsec-permissions-policy/blob/master/features.md, https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy
        - traefik.frontend.headers.referrerPolicy=same-origin # can use same-origin for more privacy (https://web.dev/referrer-best-practices/)
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.frameDeny=true
        - "traefik.frontend.headers.contentSecurityPolicy=default-src 'self'; script-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; frame-ancestors 'self'; frame-src 'self'; object-src 'none';" # https://csp-evaluator.withgoogle.com/ content security policy
        - traefik.frontend.headers.contentTypeNosniff=true
        # HSTS
        - traefik.frontend.headers.SSLRedirect=true
        - "traefik.frontend.headers.SSLHost={{ traefik_ui_domain }}"
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
        # Auth                                                          because '$' is evaluated, remember to escape it
        - "traefik.frontend.auth.basic.users={{ backend_users|join(',') | replace('$', '$$') }}"
        - "traefik.frontend.whiteList.sourceRange={{ trusted_backend_ips|join(',') }},127.0.0.1"
    logging:
      options:
        # this tag is used by fail2ban using `journalctl CONTAINER_TAG=traefik-consul`
        tag: "traefik-consul"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # see https://docs.traefik.io/configuration/backends/docker/ for details
    # see https://docs.traefik.io/configuration/entrypoints/#cli for CLI syntax
    environment:
      - GODEBUG=tls13=1
    command: >
      --docker
      --docker.swarmmode
      --docker.watch
      --docker.exposedbydefault=false
      --constraints=tag=={{ traefik_public_tag }}
      --entrypoints='Name:http Address::80 Compress:true'
      --entrypoints='Name:https Address::443 Compress:true TLS TLS.MinVersion:{{ traefik_min_tls_version }} TLS.SniStrict:true TLS.CipherSuites:{{ traefik_cipher_suites|join(',') }}'
      --consul
      --consul.endpoint="consul-leader:8500"
      --acme
      --acme.email="{{ lets_encrypt_email }}"
      --acme.storage="traefik/acme/account"
      --acme.entryPoint=https
      --acme.KeyType="{{ traefik_acme_keytype|default('EC384') }}"
      --acme.httpChallenge.entryPoint=http
      --acme.onhostrule=true
      --acme.acmelogging=true
      --logLevel=INFO
      --accessLog
      --api
    networks:
      - default
      - "{{ traefik_network }}"

volumes:
  consul-data-leader:
  consul-data-replica:

networks:
  {{ traefik_network }}:
    external: true
{% if consul_external_network_enabled %}
  {{ consul_external_network }}:
    external: true
{% endif %}