###################### Journalbeat Configuration Example #########################

# This file is an example configuration file highlighting only the most common
# options. The journalbeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/journalbeat/index.html

# For more available modules and options, please see the journalbeat.reference.yml sample
# configuration file.

#=========================== Journalbeat inputs =============================

journalbeat.inputs:
  # Paths that should be crawled and fetched. Possible values files and directories.
  # When setting a directory, all journals under it are merged.
  # When empty starts to read from local journal.
  - paths: []

    # The number of seconds to wait before trying to read again from journals.
    #backoff: 1s
    # The maximum number of seconds to wait before attempting to read again from journals.
    #max_backoff: 20s

    # Position to start reading from journal. Valid values: head, tail, cursor
    seek: cursor
    # Fallback position if no cursor data is available.
    #cursor_seek_fallback: head

    # Exact matching for field values of events.
    # Matching for nginx entries: "systemd.unit=nginx"
    #include_matches: []

    # Optional fields that you can specify to add additional information to the
    # output. Fields can be scalar values, arrays, dictionaries, or any nested
    # combination of these.
    #fields:
    #  env: staging


    #========================= Journalbeat global options ============================
    #journalbeat:
    # Name of the registry file. If a relative path is used, it is considered relative to the
    # data path.
    #registry_file: registry

#==================== Elasticsearch template setting ==========================
setup.template.settings:
  index.number_of_shards: 1
  #index.codec: best_compression
  #_source.enabled: false

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
name: "{{ hostname }}"

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging


#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here or by using the `setup` command.
#setup.dashboards.enabled: false

# The URL from where to download the dashboards archive. By default this URL
# has a value which is computed based on the Beat name and version. For released
# versions, this URL points to the dashboard archive on the artifacts.elastic.co
# website.
#setup.dashboards.url:

#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
#setup.kibana:

# Kibana Host
# Scheme and port can be left out and will be set to the default (http and 5601)
# In case you specify and additional path, the scheme is required: http://localhost:5601/path
# IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
#host: "localhost:5601"

# Kibana Space ID
# ID of the Kibana Space into which the dashboards should be loaded. By default,
# the Default Space will be used.
#space.id:

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

#-------------------------- Elasticsearch output ------------------------------
#output.elasticsearch:
  # Array of hosts to connect to.
  #hosts: []

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

  #----------------------------- Logstash output --------------------------------
output.logstash:
  hosts: ["{{ journalbeat_output_server_address }}:{{ journalbeat_output_server_port }}"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  ssl.certificate_authorities: ["{{ journalbeat_certificates_directory }}/{{ logstash_root_CA_certificate_name }}"]

  # Certificate for SSL client authentication
  ssl.certificate: "{{ journalbeat_certificates_directory }}/{{ journalbeat_node_certificate_name }}.crt"

  # Client Certificate Key
  ssl.key: "{{ journalbeat_certificates_directory }}/{{ journalbeat_node_certificate_name }}.key"

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.
# todo : drop kernel network op ( 1 Time(s): veth68ba935: renamed from eth1)
processors:
  - add_host_metadata: ~
  - drop_event:
      when:
        equals:
          systemd.unit: "docker.service"
  - drop_event:
      when:
        equals:
          systemd.unit: "journalbeat.service"
  - drop_event: # fix spamming from docker healthcheck systemd bug https://github.com/docker/for-linux/issues/679
      when:
        regexp:
          message: ".*-docker-.*.mount: Succeeded."
  - drop_fields:
      fields: ["journald.custom", "event.created"]
  #- add_cloud_metadata: ~

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
logging.level: warning

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]