---
# hostname of the mailserver host, eg: mail
# mailserver_hostname: "mail" <--- required
# main domain of the server, eg: localhost.com
# mailserver_domain: "localhost.com" <--- required

# enable traefik to handle certificates creation, if true, ssl_type,ssl_cert_path,ssl_key_path will be overwritten
mailserver_ssl_use_traefik: true
# by default, use consul and assume consul external network is created
# https://github.com/youtous/docker-mailserver-traefik#usage
mailserver_ssl_traefik_source: consul
mailserver_ssl_traefik_kv_endpoints: "consul-leader:8500"
mailserver_kv_external_network: "consul-public" # same as traefik-consul, set empty to disable

mailserver_tls_level: modern # drop old tls ciphers

# manual, letsencrypt, custom, self-signed
mailserver_ssl_type:
mailserver_ssl_cert_path:
mailserver_ssl_key_path:

# Rainloop
rainloop_enabled: true
rainloop_domain: "mail.{{ mailserver_domain }}"
rainloop_f2b_max_retries: 8

# traefik public-tag
traefik_public_tag: "traefik-public"
# name of the traefik network
traefik_network: "traefik-public"
rainloop_max_connections: 100 # maximum of simultaneous requests
rainloop_max_requests_3s_per_client: 100 # maximum of requests per client in 3s
rainloop_max_request_size_megabytes: 128 # maximum size of request in MB

rainloop_mysql_database: rainloop
rainloop_mysql_user: rainloop
rainloop_mysql_password:
# DNS resolution according deployment strategy
rainloop_on_mysql_host: true # => use `mysql_server` for hostname if the rainloop container runs on the same host as the mysql server, set to true (permits localhost DNS resolution)

# activate debug mode
mailserver_debug: false

# use only stmp
mailserver_only_smtp: false

mailserver_allowed_ips:
  port_465: [] # list of ip/networks allowed to access port 587, whitelisting docker0 (172.17.0.0/16) or extended network (172.16.0.0/12) allows
            # containers on running on the same host as docker-mailserver to access the mailserver
  port_993: []

# allow localhost (empty), host, network (docker network) or connected-networks (all docker networks) to send emails (mynetworks)
# /!\ allowed networks will be able to send mail without password
# don't be confuse with mailserver_allowed_ips !
mailserver_allowed_networks: ""

# Postfix
mailserver_postmaster_address: "postmaster@{{ mailserver_domain }}"
mailserver_default_mailbox_limit_mb: 500
mailserver_message_size_limit_mb: 12
mailserver_postscreen_action: enforce

# whitelisted ip or domain not considered by postgrey
mailserver_whitelist_clients: []

# ban list for receive/send emails
mailserver_send_restricted: [] # emails banned to be used as destination
mailserver_receive_restricted: [] # emails banned to send email to this server

# domains configuration
# see DNS to setup https://hub.docker.com/r/monogramm/autodiscover-email-settings
mailserver_domains:
  # Generate DKIM using : https://dkimcore.org/specification.html
  # openssl genrsa -out mail.heaven-pascal.youtous.me.priv 2048
  # openssl rsa -in mail.heaven-pascal.youtous.me.priv -pubout >mail.heaven-pascal.youtous.me.pub
  # - domain: mail.heaven-pascal.youtous.me
  #  dkim_private: |
  #  dkim_public: |
  #  aliases:
  #    - alias: joe@heaven-pascal.youtous.me
  #      to: monitoring@heaven-pascal.youtous.me
  #  aliases_regexp:
  #    - regexp: /^test[0-9][0-9]*@heaven-pascal.youtous.me/
  #      to: monitoring@heaven-pascal.youtous.me
  #  accounts:
  #    - username:
  #      bcrypt_password: "" # use bcrypt-passwd.sh script to generate password
  #      quota_mb: 16 # optional : specific quota in MB
  #  mta_sts: # ref 
  #    version: # define mts-sts policy version (only one, don't define and use default value)
  #    # policy lifetime positive integer up to 31557600.
  #    # recommended is 604800
  #    # testing value is 86401
  #    max_age:
  #    mode: # choose between testing, enforce (prod) and none, use enforce after tests
  #    mx_entries:
  #      - mailing-heaven-pascal.heaven-pascal.youtous.me # each mx entry must be listed here

# Reporting
mailserver_reporting_interval: "weekly"
mailserver_reporting_recipient: "{{ mailserver_postmaster_address }}"

# Postgrey
mailserver_enable_postgrey: true
# greylist for N seconds
mailserver_postgrey_delay: 300
# delete entries older than N days since the last time that they have been seen
mailserver_postgrey_max_age: 35
# whitelist host after N successful deliveries (N=0 to disable whitelisting)
mailserver_postgrey_auto_whitelist: 5

# SpamAssassin
mailserver_enable_spamassassin: true

# Enable autoconfig service
mailserver_enable_autodiscover: true
mailserver_autodiscover_max_connections: 100 # maximum of simultaneous requests
mailserver_autodiscover_max_requests_3s_per_client: 20 # maximum of requests per client in 3s
mailserver_autodiscover_max_request_size_megabytes: 4 # maximum size of request in MB

# Fail2ban
# not supported in swarm mode due to lack of cap_add: https://github.com/moby/moby/issues/25885
# [DOES NOT WORK] mailserver_enable_fail2ban: true

# Fail2ban on docker host
mailserver_enable_host_fail2ban: true

# ManageSieve, used by clients, for instance on RainLoop, port is not exposed
mailserver_enable_managesieve: true

# Fetchmail
mailserver_enable_fetchmail: false
mailserver_fetchmail_poll_interval: 300

# ClamAV
mailserver_enable_clamav: false
mailserver_virus_delete_delay: "7" # days
...