version: "3.7"
# todo configs and secrets

services:

{% if rainloop_enabled %}
  rainloop:
    image: youtous/rainloop:latest
    volumes:
      - rainloop-data:/rainloop/data
    networks:
      - mailserver
      - {{ traefik_network }}
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.mailserver.rainloop-data == true
      restart_policy:
        condition: any
        delay: 5s
        window: 15s
      labels:
        - traefik.enable=true
        - traefik.port=8888
        - "traefik.tags={{ traefik_public_tag }}"
        - "traefik.docker.network={{ traefik_network }}"

        # In this configuration, we use 3 segments labels :
        #   - traefik.redirectorservice.frontend : redirect http to https
        #   - traefik.webservice.frontend : it's the default frontend, used for webmail
        #   - traefik.admin.frontend : restrict admin panel for internal usage only

        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

        # Main Traefik service configuration (common for webservice and admin)
        - "traefik.frontend.rule=Host:{{ rainloop_domain }}"
        # HSTS
        - traefik.frontend.headers.SSLRedirect=true
        - "traefik.frontend.headers.SSLHost={{ rainloop_domain }}"
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
        # security labels
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.frameDeny=true # deny iframes
        - traefik.frontend.headers.contentTypeNosniff=true
        # rate limits
        - traefik.frontend.rateLimit.extractorFunc=client.ip
        - traefik.frontend.rateLimit.rateSet.rate3s.period=3s
        - "traefik.frontend.rateLimit.rateSet.rate3s.average={{ rainloop_max_requests_3s_per_client|int }}"
        - "traefik.frontend.rateLimit.rateSet.rate3s.burst={{ rainloop_max_requests_3s_per_client * 2|int }}"
        # max connections limits
        - "traefik.backend.maxconn.amount={{ rainloop_max_connections|int }}"
        - traefik.backend.maxconn.extractorFunc=request.host
        # requests size limits: currently disabled due to a bug with 302 requests; todo fix it
        # - "traefik.backend.buffering.maxRequestBodyBytes={{ rainloop_max_request_size_megabytes * 1000000|int }}" # maximum request size allowed
        # - traefik.backend.buffering.memRequestBodyBytes=2097152 # after this limit, request will be buffered on disk instead of RAM
        # - traefik.backend.buffering.retryExpression=IsNetworkError() && Attempts() <= 2

        # Traefik service in charge of admin mailclien
        # Restrict admin with internal Auth     because '$' is evaluated, remember to escape it
        - "traefik.admin.frontend.rule=Host:{{ rainloop_domain }};Query: admin="
        - traefik.admin.frontend.entryPoints=https
        - "traefik.admin.frontend.auth.basic.users={{ backend_users|join(',') | replace('$', '$$') }}"
        - "traefik.admin.frontend.whiteList.sourceRange={{ trusted_backend_ips|join(',') }},127.0.0.1"
        # todo : fail2ban on fails

{% endif %}

  mail:
    image: tvial/docker-mailserver:latest
    hostname: "{{ mailserver_hostname }}"
    domainname: "{{ mailserver_domain }}"
    ports:
      - target: 25
        published: 25
        mode: host
      - target: 143
        published: 143
        mode: host
      - target: 587
        published: 587
        mode: host
      - target: 993
        published: 993
        mode: host
    volumes:
      - mailserver-data:/var/mail
      - mailserver-state:/var/mail-state
    environment:
      # General conf
      - ENABLE_POP3=0 # Pop3 is disabled
      - ONE_DIR=1
      - "DMS_DEBUG=$DMS_DEBUG"
      - "PERMIT_DOCKER=$PERMIT_DOCKER" # see # https://github.com/tomav/docker-mailserver/issues/1405#issuecomment-590106498
      - "SMTP_ONLY=$SMTP_ONLY" # only enable sending messages (using postfix)
      - SPOOF_PROTECTION=1 # do not allow forged address
      # Email summary
      - PFLOGSUMM_TRIGGER=logrotate # Enables regular pflogsumm mail reports when logs are rotated
      - "PFLOGSUMM_RECIPIENT=$PFLOGSUMM_RECIPIENT" # Recipient address for pflogsumm reports.
      - "LOGROTATE_INTERVAL=$LOGROTATE_INTERVAL"
      # ClamAV conf
      - "ENABLE_CLAMAV=$ENABLE_CLAMAV"
      - "VIRUSMAILS_DELETE_DELAY=$VIRUSMAILS_DELETE_DELAY"
      # Postfix
      - "POSTMASTER_ADDRESS=$POSTMASTER_ADDRESS"
      - "POSTFIX_MAILBOX_SIZE_LIMIT=$POSTFIX_MAILBOX_SIZE_LIMIT" # Set the mailbox size limit for all users. If set to zero, the size will be unlimited (default).
      - "POSTFIX_MESSAGE_SIZE_LIMIT=$POSTFIX_MESSAGE_SIZE_LIMIT" # Set the message size limit for all users. If set to zero, the size will be unlimited (not recommended!), empty = 10Mb
      - POSTFIX_INET_PROTOCOLS=ipv4 # Only use ipv4 for accepting connections because of docker http://www.postfix.org/postconf.5.html#inet_protocols
      - "POSTSCREEN_ACTION=$POSTSCREEN_ACTION"
      # Dovecot
      - "DOVECOT_TLS=" # yes => LDAP over TLS enabled for Dovecot
      - DOVECOT_MAILBOX_FORMAT=maildir
      # Postgrey
      - "ENABLE_POSTGREY=$ENABLE_POSTGREY" # prevent spam using temp rejection of message
      - "POSTGREY_DELAY=$POSTGREY_DELAY"
      - "POSTGREY_MAX_AGE=$POSTGREY_MAX_AGE"
      - POSTGREY_TEXT=Delayed by postgrey
      - "POSTGREY_AUTO_WHITELIST_CLIENTS=$POSTGREY_AUTO_WHITELIST_CLIENTS"
      # SpamAssasin
      - "ENABLE_SPAMASSASSIN=$ENABLE_SPAMASSASSIN"
      - SA_TAG=2.0
      - SA_TAG2=6.31
      - SA_KILL=6.31
      - SA_SPAM_SUBJECT=***SPAM*****
      # Fetchmail
      - "ENABLE_FETCHMAIL=$ENABLE_FETCHMAIL"
      - "FETCHMAIL_POLL=$FETCHMAIL_POLL"
      # SSL
      - "SSL_TYPE=$SSL_TYPE"
      - "TLS_LEVEL=$TLS_LEVEL"
      # ManageSieve for automatic filtering on server side on port 4190
      - "ENABLE_MANAGESIEVE=$ENABLE_MANAGESIEVE"
      # SRS
      - ENABLE_SRS=0 # automatic forwarding is disabled
      - SRS_SENDER_CLASSES=envelope_sender
      - SRS_EXCLUDE_DOMAINS=
      - SRS_SECRET=
      # When using server as a relay, if not let empty
      - DEFAULT_RELAY_HOST=
      - RELAY_HOST=
      - RELAY_PORT=25
      - RELAY_USER=
      - RELAY_PASSWORD=
      # Fail2ban
      - "ENABLE_FAIL2BAN=$ENABLE_FAIL2BAN"
      # SASL Auth
      - ENABLE_SASLAUTHD=0
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    networks:
      - mailserver
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.mailserver.mailserver-data == true
      restart_policy:
        condition: any
        delay: 5s
        window: 15s

networks:
  mailserver:
    driver: overlay
    driver_opts:
      encrypted: ""
{% if rainloop_enabled %}
  rainloop-network:
    driver: overlay
    driver_opts:
      encrypted: ""
  {{ traefik_network }}:
    external: true
{% endif %}

volumes:
  mailserver-data:
    driver: local
  mailserver-state:
    driver: local
{% if rainloop_enabled %}
  rainloop-data:
    driver: local
{% endif %}