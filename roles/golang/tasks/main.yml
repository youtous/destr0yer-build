---
# This role contains golang installation
- name: Add golang to PATH bash
  become: true
  ansible.builtin.template:
    src: files/golang.sh.j2
    dest: /etc/profile.d/golang.sh
    owner: root
    group: root
    mode: u=rw,g=rx,o=rx

- name: Add /usr/sbin to PATH fish
  become: true
  ansible.builtin.template:
    src: files/golang.fish.j2
    dest: /etc/fish/conf.d/golang.fish
    owner: root
    group: root
    mode: u=rw,g=rx,o=rx

- name: Check if go is installed
  ansible.builtin.stat:
    path: "{{ go_root }}/bin/go"
  register: golang_present

- name: Check go version is {{ go_version_to_install }}
  ansible.builtin.shell: >
      set -o pipefail &&
      "{{ go_root }}/bin/go" version | awk '{print $3}'
  register: golang_fact_installed_version
  changed_when: false
  when: golang_present.stat.exists
  args:
    executable: /bin/bash

- name: Install golang
  become: true
  ansible.builtin.import_role:
    name: fubarhouse.golang
  vars:
    go_version: "{{ go_version_to_install }}"
    GOROOT: "{{ go_root }}" # noqa var-naming
    GOARCH: "{{ 'arm64' if (ansible_architecture == 'aarch64') else 'amd64' }}" # noqa var-naming
    # checksum depending of the arch
    go_checksum: "{{ go_arm64_checksum if (ansible_architecture == 'aarch64') else go_amd64_checksum }}"
    go_get: # we want a clean install
  when: not golang_present.stat.exists or (golang_fact_installed_version.stdout != "go"~go_version_to_install)
...
