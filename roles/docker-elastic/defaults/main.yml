---
# TODO: logstash @depracted - logstash should be replaced by vector.d due to licence/version incompatibility

logstash_elastic_version: 7.13.4
elastic_version: 7.12.1 # pin this version until migration to fluentd,
# see https://www.reddit.com/r/aws/comments/nn95aq/elastic_has_broken_filebeat_as_of_713_it_no/

opensearch_version: 1.2.0

# a list of allowed ips to access logstash thought socket
logstash_allowed_ips:
  - '172.17.0.0/16' # docker0
  - '172.18.0.0/16' # docker_gwbridge

# a list of allowed ips to access logstash thought beats, it's used for external cluster submitting data
logstash_external_allowed_ips:
  - '172.17.0.0/16' # docker0
  - '172.18.0.0/16' # docker_gwbridge


elastic_backend_users: "{{ backend_users | default([]) }}"
elastic_allowed_ips: "{{ trusted_backend_ips }}"


# The encryption of the overlay networks has a bug that is  causing issues for one service to reach another over the overlay
# network. See moby/moby#37115 - https://github.com/moby/moby/issues/37115
# On some cloud provider, you might want to disable this encryption to get a working service
elastic_internal_network_encryption_enabled: true

# services to monitor
# elastic_heartbeat_monitors:
#   - type: http
#     id: internal-stack
#     name: My stack status
#     schedule: '@every 30s'
#     urls:
#       - http://myurl:9200
#       - http://other:5601

# how much memory to allocate (in Mo)
# /!\ less than 350 leads to startup issues
elasticsearch_memory: 1024
logstash_memory: 512
# elasticsearch_memory_reservation: "{{ (elasticsearch_memory|int / 2) | round }}"
# full memory for stability
elasticsearch_memory_reservation: "{{ elasticsearch_memory }}"
logstash_memory_reservation: "{{ logstash_memory }}"

# indices limits (curator) in GB
curator_max_size_docker: 15
curator_max_age_days_docker: 90
curator_max_size_filebeat: 3
curator_max_age_days_filebeat: 90
curator_max_size_heartbeat: 1
curator_max_age_days_heartbeat: 15
curator_max_size_journalbeat: 5
curator_max_age_days_journalbeat: 90
curator_max_size_metricbeat: 5
curator_max_age_days_metricbeat: 15

# name of the traefik and caddy network
caddy_network: "caddy-public"
traefik_public_network: "traefik-public"

# node that will host the stack
elastic_hosts: "{{ groups['primary_manager_elastic'] }}"
elasticsearch_hosts: "{{ groups['primary_manager_elastic'] }}"
kibana_hosts: "{{ groups['primary_manager_elastic'] }}"
logstash_hosts: "{{ groups['primary_manager_elastic'] }}"

# cluster information, useful when data is aggregated in a separated cluster
elastic_cluster_name: "{{ hostname }}"

# can be used as a forwarder
elastic_use_as_forwarder: false
elastic_logstash_destination_host: "" # localhost address of logstash receiver
elastic_logstash_destination_port: 5064 # port port of logstash receiver

# logstash_client_forwarder_CA_certificate is deprecatred use logstash_client_forwarder_ca_certificate instead
# CA shared with the logstash receiver, this is required when used as a forwarder
logstash_client_forwarder_ca_certificate: "{{ logstash_client_forwarder_CA_certificate | default('') }}"
logstash_client_forwarder_node_certificate: ""
logstash_client_forwarder_node_private_key: ""

# email alerts settings, it is advised to create a dedicated email account for elastic
elastic_alert_email_server: ""
elastic_alert_email_port: ""
elastic_alert_email_from: ""
elastic_alert_email_user: ""
elastic_alert_email_password: ""

# domains
kibana_domain: "kibana.{{ hostname }}"
elasticsearch_domain: "elasticsearch.{{ hostname }}"
logstash_domain: "logstash.{{ hostname }}"
enable_logstash_webui: false
enable_elasticsearch_webui: false
enable_webhook_smtp_forwarder: true


# Provide X509 certificates for TLS
# you can use pipe syntax

# logstash_CA_certificate is deprecated
logstash_ca_certificate: "{{ logstash_CA_certificate | default('') }}" # usually logstash-rootCA.crt # noqa var-naming
logstash_node_private_key: "" # usually logstash-node-hostname.key
logstash_node_certificate:  # usually logstash-node-hostname.crt


elastic_disabled_tls_protocols: # event with these parameters, use the elastic stack behind a VPN!
  - SSLv2Hello                  # Elastic TLS plugin implementation is not secure (different sources, tech etc...)
  - SSLv3
  - TLSv1
  - TLSv1.1
...
