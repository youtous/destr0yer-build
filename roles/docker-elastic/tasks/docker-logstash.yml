---
# Setup the required components to send logs from docker nodes to the logstash processor node.
# Transport will be done using TLS certificates (ensure encryption && identity)
# Logstash node will filter any non-authorized ip using UFW and internal mechanism.

- name: Ensure logstash root CA is defined
  fail:
    msg: root CA is empty or not defined.
  when: logstash_CA_certificate is not defined or logstash_CA_certificate|length == 0

- name: Ensure logstash node crt is defined
  fail:
    msg: crt is empty or not defined.
  when: logstash_node_certificate is not defined or logstash_node_certificate|length == 0

- name: Ensure logstash node key is defined
  fail:
    msg: key is empty or not defined.
  when: logstash_node_private_key is not defined or logstash_node_private_key|length == 0

# Setup TLS using x509 certificates
- name: Register logstash secrets
  docker_secret:
    name: "{{ item.name }}"
    data: "{{ item.data }}"
    state: present
  with_items:
    - {name: "{{ docker_elastic_stack_name }}_logstash-rootCA.crt-{{ elastic_deploy_timestamp }}", data: "{{ logstash_CA_certificate }}"}
    - {name: "{{ docker_elastic_stack_name }}_logstash-certificate.crt-{{ elastic_deploy_timestamp }}", data: "{{ logstash_node_certificate }}"}
    - {name: "{{ docker_elastic_stack_name }}_logstash-private-key.key-{{ elastic_deploy_timestamp }}", data: "{{ logstash_node_private_key }}"}
  no_log: true
...