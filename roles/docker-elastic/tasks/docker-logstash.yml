---
# Setup the required components to send logs from docker nodes to the logstash processor node.
# Transport will be done using TLS certificates (ensure encryption && identity)
# Logstash node will filter any non-authorized ip using UFW and internal mechanism.

- name: Revoke nodes firewall - tcp/5000 (logstash)
  become: yes
  ufw:
    rule: allow
    port: 5000
    src: "{{ item }}"
    delete: yes
  with_items: "{{ revoked_logstash_allowed_ips }}"

- name: Allow nodes firewall - tcp/5000 (logstash)
  become: yes
  ufw:
    rule: allow
    port: 5000
    src: "{{ item }}"
  with_items: "{{ logstash_allowed_ips }}"

- name: Allow from docker containers networks to this host - tcp/5000 (logstash)
  become: yes
  ufw:
    rule: allow
    src: "172.16.0.0/12"
    port: 5000

# Setup TLS using x509 certificates
- name: Setup logstash certificates folder
  file:
    path: "{{ logstash_certificates_directory }}"
    state: directory
    mode: u=rwx,g=,o=

- name: Copy logstash RootCA certificate
  copy:
    content: "{{ logstash_CA_certificate }}"
    dest: "{{ logstash_certificates_directory }}/{{ logstash_root_CA_certificate_name }}"
    mode: u=rw,g=,o=
  notify:
    - deploy elastic

- name: Copy logstash node certificate
  copy:
    content: "{{ logstash_node_certificate }}"
    dest: "{{ logstash_certificates_directory }}/{{ logstash_node_certificate_name }}.crt"
    mode: u=rw,g=,o=
  notify:
    - deploy elastic

- name: Copy logstash node private key
  copy:
    content: "{{ logstash_node_private_key }}"
    dest: "{{ logstash_certificates_directory }}/{{ logstash_node_certificate_name }}.key"
    mode: u=rw,g=,o=
  no_log: true
  notify:
    - deploy elastic
...