version: "3.7"

services:
  portainer:
    image: portainerci/portainer:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify --no-auth # disable auth, traefik will handle it
    volumes:
      - portainer-data:/data
    networks:
      - agent-network
      - {{ traefik_network }}
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.portainer.portainer-data == true
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 45s
        max_attempts: 3
      labels:
        - "traefik.frontend.rule=Host:{{ portainer_domain }}"
        - traefik.enable=true
        - traefik.port=9000
        - "traefik.tags={{ traefik_public_tag }}"
        - "traefik.docker.network={{ traefik_network }}"
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        # security labels
        - traefik.frontend.headers.browserXSSFilter=true
        - traefik.frontend.headers.frameDeny=true
        - traefik.frontend.headers.contentTypeNosniff=true
        # HSTS
        - traefik.frontend.headers.SSLRedirect=true
        - "traefik.frontend.headers.SSLHost={{ portainer_domain }}"
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSIncludeSubdomains=true
        - traefik.frontend.headers.STSPreload=true
        # Auth
        - "traefik.frontend.auth.basic.users={{ backend_users|join(',') | replace('$', '$$') }}"
        - "traefik.frontend.whiteList.sourceRange={{ trusted_backend_ips|join(',') }},127.0.0.1"
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  agent:
    image: portainerci/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 30s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.10'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M

networks:
  agent-network:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: ""
  {{ traefik_network }}:
    external: true

volumes:
  portainer-data:
    driver: local
