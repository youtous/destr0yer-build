---
# version of caddy to use
caddy_version: "v-2.5.1"

# version of consul to use
caddy_consul_version: "1.12"

# please define manually an acl token for consul (uuid-4)
# > irb
#  require 'securerandom'
#
#  uuid = SecureRandom.uuid
consul_acl_master_token: ""

# name of the caddy network
caddy_network: "caddy-public"

# caddy public-tag, this tag is used to mark a service as public
caddy_public_tag: "caddy-public"

# for backwards compatibility (and mailserver), we stick with RSA, waiting LE supporting ed25519, P- curves are not trusted (NSA)
caddy_acme_keytype: "rsa4096"

# let's encrypt email for certificates
lets_encrypt_email: "{{ monitoring_email }}"

# domain used by consul UI
consul_ui_domain: "consul.{{ hostname }}"


# host port used to expose caddy metrics
caddy_metrics_port: "9500"
# list of ips allowed to retrieve caddy metrics
caddy_metrics_allowed_ips: []

# number of consul replicas (try to align with number of caddy replicas for HA)
consul_replicas: "{{ (groups['swarm_managers'] | length) + 1 }}"

# docker restart policies (0 for unlimited)
caddy_max_attempts: 0
consul_max_attempts: 0

# ports used by caddy
caddy_http_port: "80"
caddy_https_port: "443"

# for tests, use CA https://acme-staging-v02.api.letsencrypt.org/directory, do not define for production
caddy_custom_acme_ca: ""

# Caddy Server Options (global) https://caddyserver.com/docs/caddyfile/options#server-options
caddy_servers_directives: |
  servers :443 {
    protocol {
      experimental_http3
      strict_sni_host
    }
  }

# enable debug?
caddy_debug: false

# Causes all certificates to be issued internally by default
caddy_local_certs: false

# configure sysctl to accept a given number of connections
caddy_max_connections_sysctl: 4096

# Caddyfile additional content
caddy_caddyfile_content: ""

# key used to encrypt tls certificates stored in consul, change it needed
caddy_consul_certificates_aes_key: "consultls-1234567890-caddytls-32"

# The encryption of the overlay networks has a bug that is  causing issues for one service to reach another over the overlay
# network. See moby/moby#37115 - https://github.com/moby/moby/issues/37115
# On some cloud provider, you might want to disable this encryption to get a working service
caddy_internal_network_encryption_enabled: true
...
