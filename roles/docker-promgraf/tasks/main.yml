---
# This role setup a complete monitoring application for containers in swarm mode
# see https://github.com/stefanprodan/promgraf for more details

- name: Ensure promgraf directory exists
  file:
    state: directory
    path: "{{ promgraf_compose_file_dest_directory }}"

- name: Register deployment timestamp
  set_fact:
    promgraf_deploy_timestamp: "{{ ansible_date_time.epoch }}"

- name: Ensure prometheus directories exists
  file:
    state: directory
    path: "{{ promgraf_compose_file_dest_directory }}/{{ item }}"
  with_items:
    - prometheus/rules
    - prometheus/conf

- name: Copy prometheus rules configuration
  copy:
    src: "files/prometheus/rules/{{ item }}"
    dest: "{{ promgraf_compose_file_dest_directory }}/prometheus/rules/{{ item }}"
    mode: u=rw,g=,o=
  with_items: "{{ promgraf_prometheus_rules }}"

- name: Copy prometheus configuration
  template:
    src: "templates/prometheus/conf/prometheus.j2.yml"
    dest: "{{ promgraf_compose_file_dest_directory }}/prometheus/conf/prometheus.yml"
    mode: u=rw,g=,o=

- name: Ensure alertmanager directory exists
  file:
    state: directory
    path: "{{ promgraf_compose_file_dest_directory }}/alertmanager"

- name: Register promgraf secrets
  import_tasks: secrets.yml

- name: Tag current node as prometheus origin
  docker_node:
    hostname: "{{ hostname }}"
    labels:
      promgraf.prometheus-data: "true"

- name: Tag current node as alertmanager origin
  docker_node:
    hostname: "{{ hostname }}"
    labels:
      promgraf.alertmanager-data: "true"

- name: Tag current node as grafana origin
  docker_node:
    hostname: "{{ hostname }}"
    labels:
      promgraf.grafana-data: "true"

- name: Copy promgraf stack
  template:
    src: templates/docker-compose.promgraf.j2.yml
    dest: "{{ promgraf_compose_file_dest }}"
    mode: u=rw,g=,o=

- name: Deploy promgraf stack
  docker_stack:
    state: present
    prune: yes
    name: "{{ docker_promgraf_stack_name }}"
    compose:
      - "{{ promgraf_compose_file_dest }}"
  environment:
    GF_SMTP_HOST: "{{ promgraf_alert_email_server }}:{{ promgraf_alert_email_port }}"
    GF_SMTP_FROM_ADDRESS: "{{ promgraf_alert_email_from }}"
    GF_SMTP_USER: "{{ promgraf_alert_email_user }}"
    GF_SMTP_PASSWORD: "{{ promgraf_alert_email_password }}"

    GF_SERVER_DOMAIN: "{{ promgraf_grafana_domain }}"
    GF_INSTALL_PLUGINS: "{{ promgraf_grafana_plugins|join(',') }}"

    DEPLOY_TIMESTAMP: "{{ promgraf_deploy_timestamp }}"
  notify: docker prune
  no_log: true
...