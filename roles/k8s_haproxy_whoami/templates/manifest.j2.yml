---
apiVersion: v1
kind: Namespace
metadata:
  name: "{{ k8s_haproxy_whoami_namespace }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami-deployment
  namespace: "{{ k8s_haproxy_whoami_namespace }}"
  labels:
    app: whoami
spec:
  replicas: {{ k8s_haproxy_whoami_replicas }}
  selector:
    matchLabels:
      app: whoami
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami-container
          image: "{{ k8s_haproxy_whoami_image }}"
          ports:
            - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami-ingress
  namespace: "{{ k8s_haproxy_whoami_namespace }}"
  annotations:
    haproxy.org/whitelist:  "{{ k8s_haproxy_whoami_allowlist }}"
    # protect with additional basic auth
    haproxy.org/auth-type: basic-auth
    haproxy.org/auth-realm: "Admin Area"
    haproxy.org/auth-secret: "{{ k8s_haproxy_whoami_basic_auth_secret_name }}"

spec:
  ingressClassName: haproxy
  tls:
    - hosts:
        - "{{ k8s_haproxy_whoami_domain }}"
      secretName: "{{ k8s_haproxy_whoami_tls_secret_name }}"
  rules:
    - host: "{{ k8s_haproxy_whoami_domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: whoami-service
                port:
                  number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "{{ k8s_haproxy_whoami_tls_secret_name }}"
  namespace:  "{{ k8s_haproxy_whoami_namespace }}"
spec:
  secretName: "{{ k8s_haproxy_whoami_tls_secret_name }}"
  issuerRef:
    name: "{{ k8s_haproxy_whoami_tls_issuer_name }}"
    kind: ClusterIssuer
  dnsNames:
    - "{{ k8s_haproxy_whoami_domain }}"
  metadata:
    namespace:  "{{ k8s_dashboard_k8s_namespace }}"
  privateKey:
    algorithm: RSA # TODO : when 25519 is supported, switch
    size: 4096
    rotationPolicy: Always # ðŸ”° Here.
---
apiVersion: v1
kind: Service
metadata:
  name: whoami-service
  namespace: "{{ k8s_haproxy_whoami_namespace }}"
spec:
  selector:
    app: whoami
  ports:
    - port: 80
      targetPort: 80
...
