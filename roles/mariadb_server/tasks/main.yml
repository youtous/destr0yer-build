---
# This role installs Mariadb-server on the system. It allows connections from database_clients hosts (group).

- name: Ensure mariadb etc directory exists
  become: true
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: root
    group: root
    mode: u=rwx,g=xr,o=x
  with_items:
    - "{{ mariadb_config_include_dir }}"
    - "{{ mariadb_config_directory }}"

- name: Setup my.cnf global
  become: true
  ansible.builtin.template:
    src: my.cnf.j2
    dest: "{{ mariadb_config_file }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    force: true
  notify: Restart mariadb

- name: Setup mariadb-server
  become: true
  ansible.builtin.import_role: # noqa: var-naming[no-role-prefix]
    name: geerlingguy.mysql
  vars:
    mysql_root_home: /root
    mysql_root_username: root
    mysql_root_password: "{{ mariadb_root_password }}"
    mysql_enabled_on_startup: true
    overwrite_global_mycnf: false
    # A list of files that should override the default global my.cnf. Each item in the array requires a "src"
    # parameter which is a path to a file. An optional "force" parameter can force the file to be updated each time ansible runs.
    mysql_config_include_files:
      - {src: templates/50-ssl.j2.cnf, force: true}
    mysql_databases: "{{ mariadb_databases }}"
    mysql_users: "{{ mariadb_users }}"
    mysql_packages:
      - mariadb-client
      - mariadb-server
      - python3-mysqldb
    mysql_port: "{{ mariadb_port }}"
    mysql_bind_address: "{{ mariadb_bind_address }}"
    mysql_datadir: "{{ mariadb_datadir }}"
    mysql_log_error: "{{ mariadb_log_error }}" # using journalctl
    mysql_syslog_tag: "{{ mariadb_syslog_tag }}"
    mysql_config_include_dir: "{{ mariadb_config_include_dir }}"
    mysql_supports_innodb_large_prefix: "{{ mariadb_supports_innodb_large_prefix }}" # https://github.com/geerlingguy/ansible-role-mysql/issues/272


- name: Configure systemd.service for mariadb (logging)
  become: true
  ansible.builtin.copy:
    src: files/systemd/mysqld.service.d
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: u=rw,g=r,o=
  notify:
    - Systemd daemon reload
    - Restart mariadb

- name: Configure SSL on mariadb
  ansible.builtin.import_tasks: ssl.yml
  when: mariadb_ssl_enabled

- name: Setup host.allow for mariadb
  become: true
  ansible.builtin.blockinfile:
    dest: "/etc/hosts.allow"
    block: "{{ lookup('template', 'templates/hosts.allow.j2') }}"
    marker: "### {mark} ANSIBLE MANAGED BLOCK - mariadb allowed ip whitelist ###"

- name: "UFW Allow mariadb clients - tcp,udp/{{ mariadb_port }}"
  become: true
  ansible.builtin.import_role:
    name: youtous.ufw_smart_rules
  vars:
    ufw_rule_parameters: # noqa: var-naming[no-role-prefix]
      to_port: "{{ mariadb_port }}"
      rule: "allow"
      direction: in
    ufw_rules_criteria: from_ips
    ufw_rule_from_ips: "{{ mariadb_allowed_ips }}"

- name: Configure logrotate for mariadb
  ansible.builtin.import_role:
    name: logrotate
  vars:
    logrotate_applications:
      - name: mariadb
        definitions:
          - logs:
              - "/var/log/mysql/*.log"
            options:
              - monthly
              - rotate 12
              - size 10M
              - compress
              - delaycompress
              - missingok
              - notifempty
              - create 0640 mysql adm
...
