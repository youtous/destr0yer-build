---
# Firewall configuration
# Revocation rules

## Revoke all 2376
- name: List existing docker-swarm UFW rules - tcp,udp/2376
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    ufw status numbered | grep -zoP '\[.*\]\s2376(?!\\d).*\n' | sed -E 's/\[\s*([0-9]+)\].*$/\1/g'
    | tr --delete [:blank:] | sed 's/\x0//g' | sort -rn | sed '/^s*$/d'
  changed_when: false
  register: ufw_docker_swarm_2376_rules
  ignore_errors: true # in case no rule already exists
  args:
    executable: /bin/bash

- name: UFW delete existing docker-swarm rules - tcp,udp/2376
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    (yes || true) | ufw delete {{ item|quote }}
  with_items: "{{ ufw_docker_swarm_2376_rules.stdout_lines }}"
  when: ufw_docker_swarm_2376_rules.stdout_lines | length > 0
  args:
    executable: /bin/bash

## Revoke all 2377
- name: List existing docker-swarm UFW rules - tcp,udp/2377
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    ufw status numbered | grep -zoP '\[.*\]\s2377(?!\\d).*\n' | sed -E 's/\[\s*([0-9]+)\].*$/\1/g'
    | tr --delete [:blank:] | sed 's/\x0//g' | sort -rn | sed '/^s*$/d'
  changed_when: false
  register: ufw_docker_swarm_2377_rules
  ignore_errors: true # in case no rule already exists
  args:
    executable: /bin/bash

- name: UFW delete existing docker-swarm rules - tcp,udp/2377
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    (yes || true) | ufw delete {{ item|quote }}
  with_items: "{{ ufw_docker_swarm_2377_rules.stdout_lines }}"
  when: ufw_docker_swarm_2377_rules.stdout_lines | length > 0
  args:
    executable: /bin/bash

## Revoke all 7946
- name: List existing docker-swarm UFW rules - tcp,udp/7946
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    ufw status numbered | grep -zoP '\[.*\]\s7946(?!\\d).*\n'  | sed -E 's/\[\s*([0-9]+)\].*$/\1/g'
    | tr --delete [:blank:] | sed 's/\x0//g' | sort -rn | sed '/^s*$/d'
  changed_when: false
  register: ufw_docker_swarm_7946_rules
  ignore_errors: true # in case no rule already exists
  args:
    executable: /bin/bash

- name: UFW delete existing docker-swarm rules - tcp/7946
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    (yes || true) | ufw delete {{ item|quote }}
  with_items: "{{ ufw_docker_swarm_7946_rules.stdout_lines }}"
  when: ufw_docker_swarm_7946_rules.stdout_lines | length > 0
  args:
    executable: /bin/bash

## Revoke all 4789
- name: List existing docker-swarm UFW rules - tcp,udp/4789
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    ufw status numbered | grep -zoP '\[.*\]\s4789(?!\\d).*\n'  | sed -E 's/\[\s*([0-9]+)\].*$/\1/g'
    | tr --delete [:blank:] | sed 's/\x0//g' | sort -rn | sed '/^s*$/d'
  changed_when: false
  register: ufw_docker_swarm_4789_rules
  ignore_errors: true # in case no rule already exists
  args:
    executable: /bin/bash

- name: UFW delete existing docker-swarm rules - tcp/4789
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    (yes || true) | ufw delete {{ item|quote }}
  with_items: "{{ ufw_docker_swarm_4789_rules.stdout_lines }}"
  when: ufw_docker_swarm_4789_rules.stdout_lines | length > 0
  args:
    executable: /bin/bash

## End of revocation

- name: Allow nodes ips to pass firewall - tcp/2376
  become: true
  community.general.ufw:
    rule: allow
    port: "2376"
    src: "{{ item }}"
  with_items: "{{ nodes_ips }}"

- name: Allow nodes ips to pass firewall - tcp/2377
  become: true
  community.general.ufw:
    rule: allow
    port: "2377"
    src: "{{ item }}"
  with_items: "{{ nodes_ips }}"

- name: Allow nodes ips to pass firewall - tcp,udp/7946
  become: true
  community.general.ufw:
    rule: allow
    port: "7946"
    src: "{{ item }}"
  with_items: "{{ nodes_ips }}"

- name: Allow nodes ips to pass firewall - tcp,udp/4789
  become: true
  community.general.ufw:
    rule: allow
    port: "4789"
    src: "{{ item }}"
  with_items: "{{ nodes_ips }}"
...
